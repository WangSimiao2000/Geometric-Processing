COMP 5821M: 几何处理 2023-2024

作业 3: 纹理与法线贴图合成 [40分]
你被提供了一个带有每个顶点定义颜色的模型和一组三角形，以及一个简单的渲染器，该渲染器使用平面着色渲染三角形并忽略颜色。
你的任务是将此模型转换为具有适当纹理的表面，并计算法线贴图，其中法线的xyz映射到rgb。
然而，由于未提供纹理坐标，第一步是分配纹理坐标。正如我们在课堂上看到的，最好的简单算法是Floater的算法，你将实现这个算法。这需要数据在补丁中可用，我们已经简化了通过提供一个修改后的对象文件中的单个补丁以及用于读取和显示的代码。用户界面包括以后你将需要的控件。

I. 建立有向边数据结构 [5分]
这与作业1基本相同，但适用于带有边界的网格 - 即并非所有边都通过流形测试。
II. 识别边界 [5分]
Floater的算法要求将补丁的边界放在补丁的边缘。这需要找到补丁的边缘并跟随孔以找到所有边。
III: 生成纹理坐标 [10分]
使用Floater的算法，为网格中的每个顶点分配纹理坐标。
IV: 将纹理坐标渲染为颜色 [5分]
修改渲染器以使“uvw to RGB”能够在表面上显示纹理坐标，以进行准确性的可视检查。
V: 在纹理域中渲染网格 [5分]
以2D方式在窗口中渲染补丁，以便你（和我）可以看到网格在平面上的布局。线框复选框对此非常有用。
VI: 生成纹理映射 [5分]
以纹理域中的三角形形式渲染网格的三角形，以生成纹理映射，根据UI中的设置，可以是uvw颜色，也可以是原始rgb颜色。
VII: 生成法线贴图 [5分]
计算每个顶点的法线向量，然后转换为RGB并将其渲染到法线贴图。

编译：
所有代码应该在学校的Linux机器上编译，无需安装任何额外的库或应用程序。你应该包含一个makefile和一个readme.txt文件，其中包含任何额外的说明。
处罚：
结构混乱或注释不足的代码可能会被扣除最多2.5分。输出文件格式不良也可能被扣除多达2.5分。没有readme或makefile的代码可能会被扣除最多1分。代码如果不能正确编译将被分配为0分，但我通常会给学生一个机会来纠正这一点。
截止日期：2024年1月11日星期四上午10:00
以下是我的实施屏幕截图 - 编码大约需要3小时，数据准备大约需要12-15小时。你应该最终能够生成类似这些的图像：

几何渲染和线框：
带线框的纹理映射：
带线框的法线贴图：